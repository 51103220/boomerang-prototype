got filename stattest.c for main
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### type analysis for main ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 108 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 112 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 108 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 112 to local table
in proc main adding addrExp r28{0} - 116 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff8c existing type /*signed?*/int but added type union { void * x5; /*signed?*/int x6; }
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
### type analysis for main ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 108 to local table
in proc main adding addrExp r28{0} - 64 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
*forced* { int r24 } main(int argc m[r28 + 4], char *[] * argv m[r28 + 8], char *[] * envp m[r28 + 12])
in cluster stattest
parameters: i32 argc, [c*]* argv, [c*]* envp
end parameters
locals:
__size32 eax r24
struct stat local0 m[esp - 108]
/*signed?*/int local1 m[esp - 64]
end locals
symbols:
  r24 maps to eax type __size32
  m[esp - 64] maps to local1 type /*signed?*/int
  m[esp - 108] maps to local0 type struct stat
  m[esp + 4]{0} maps to argc type int
  m[esp + 8]{0} maps to argv type char *[] *
  m[esp + 12]{0} maps to envp type char *[] *
end symbols
live variables: r26,  r27,  r28,  r29,  m[r28{-} - 64],  m[r28{-} - 108]
end live variables
Call BB:
in edges: 
out edges: 8048377 
00000000    0 *struct stat* local0 := -
            0 *j32* local1 := -
0804835c
0804835d
0804835f
08048360
08048363
08048366
08048367
0804836a
0804836b
08048370
08048372   21 {*j32* eax, *v* r25, *v* r26} := CALL __xstat(
                *i32* local2 := 3
                *c** local3 := "test/source/stattest.c"
                *struct stat** local4 := a[local0]
              )
              Reaching definitions: r25=r28{0} - 108,   r26=r26{0},   r27=r27{0},   r28=r28{0} - 128,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r26{0},   m[r28{0} - 116]=r28{0} - 108,
                m[r28{0} - 120]=0x8048448,   m[r28{0} - 124]=3,   m[r28{0} - 128]=%pc,   tmp1=r28{0} - 8,
                %flags=SUBFLAGS32( r28{0} - 8, 100, r28{0} - 108 ),   %ZF=(r28{0} - 108) = 0,   %CF=(r28{0} - 8) <u 100
              Live variables: eax
Call BB:
in edges: 8048372 
out edges: 804838a 
08048377
0804837a
0804837d
0804837e
08048380
08048385   35 {*32* eax, *32* r25, *32* r26} := CALL printf(
                *c** local5 := "Stat returns %d; size of file is %d
"
                *j32* local6 := eax
                *j32* local7 := local1
              )
              Reaching definitions: r24=r24{21},   r25=r25{21},   r26=r26{21},   r27=r24{21},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r26{0},
                m[r28{0} - 116]=m[r28{0} - 64]{0},   m[r28{0} - 120]=r24{21},   m[r28{0} - 124]=0x8048460,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables: 
Ret BB:
in edges: 8048385 
out edges: 
0804838a
0804838c
0804838f
08048390   43 RET *j32* eax := eax
              Modifieds: *v* eax,  *32* r25,  *v* r26,  *v* esp
              Reaching definitions: eax=eax,   r25=r25,   r26=r26,   r27=r27,   esp=esp + 4,   r29=r29,
                m[esp + 4]=argc,   m[esp + 8]=argv,   m[esp + 12]=envp,   m[esp - 4]=r29,   m[esp - 8]=r27,
                local1=local1,   local0=local0,   m[esp - 112]=r26,   local4=local1,   local3=eax,   local2=0x8048460,
                m[esp - 128]=%pc,   tmp1=esp,   %flags=ADDFLAGS32( esp, 12, esp + 12 ),
                %ZF=ADDFLAGS32( esp, 12, esp + 12 ),   %CF=ADDFLAGS32( esp, 12, esp + 12 )


